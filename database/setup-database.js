require('dotenv').config();
const mysql = require('mysql2/promise');
const fs = require('fs');
const path = require('path');

async function setupDatabase() {
    console.log('üîß Configurando base de datos VozSegura...\n');

    let connection;

    try {
        // Conectar a MySQL sin especificar base de datos
        console.log('1Ô∏è‚É£ Conectando a MySQL...');
        connection = await mysql.createConnection({
            host: process.env.DB_HOST || 'localhost',
            user: process.env.DB_USER || 'root',
            password: process.env.DB_PASSWORD || '',
            port: process.env.DB_PORT || 3306,
            multipleStatements: true
        });
        console.log('‚úÖ Conectado a MySQL\n');

        // Leer el archivo SQL
        console.log('2Ô∏è‚É£ Leyendo archivo schema.sql...');
        const sqlPath = path.join(__dirname, 'schema.sql');
        const sql = fs.readFileSync(sqlPath, 'utf8');
        console.log('‚úÖ Archivo le√≠do correctamente\n');

        // Ejecutar el script SQL
        console.log('3Ô∏è‚É£ Ejecutando script SQL...');
        console.log('   (Esto puede tomar unos segundos)\n');
        
        await connection.query(sql);
        
        console.log('‚úÖ Base de datos creada exitosamente\n');

        // Verificar la creaci√≥n
        console.log('4Ô∏è‚É£ Verificando instalaci√≥n...');
        await connection.query(`USE ${process.env.DB_NAME || 'vozsegura'}`);
        
        const [tables] = await connection.query('SHOW TABLES');
        console.log(`‚úÖ ${tables.length} tablas creadas:`);
        tables.forEach(table => {
            const tableName = Object.values(table)[0];
            console.log(`   ‚úì ${tableName}`);
        });
        console.log('');

        // Contar datos iniciales
        const [instituciones] = await connection.query('SELECT COUNT(*) as total FROM instituciones');
        const [facultades] = await connection.query('SELECT COUNT(*) as total FROM facultades');
        const [recursos] = await connection.query('SELECT COUNT(*) as total FROM recursos');
        const [admins] = await connection.query('SELECT COUNT(*) as total FROM administradores');

        console.log('5Ô∏è‚É£ Datos iniciales cargados:');
        console.log(`   ‚úì ${instituciones[0].total} instituciones`);
        console.log(`   ‚úì ${facultades[0].total} facultades`);
        console.log(`   ‚úì ${recursos[0].total} recursos de ayuda`);
        console.log(`   ‚úì ${admins[0].total} administradores`);
        console.log('');

        console.log('‚ú® ¬°BASE DE DATOS CONFIGURADA EXITOSAMENTE! ‚ú®');
        console.log('='.repeat(50));
        console.log('');
        console.log('üìù Pr√≥ximos pasos:');
        console.log('   1. Ejecuta: npm start');
        console.log('   2. Prueba: http://localhost:3000/api/test/conexion');
        console.log('   3. Login admin: admin@vozsegura.com / Admin123!');
        console.log('');
        console.log('üìö Documentaci√≥n:');
        console.log('   - INSTALACION.md - Gu√≠a de instalaci√≥n');
        console.log('   - API-DOCS.md - Documentaci√≥n de la API');
        console.log('   - README-MYSQL.md - Informaci√≥n completa');
        console.log('');

    } catch (error) {
        console.error('\n‚ùå Error durante la configuraci√≥n:');
        console.error(error.message);
        console.log('\nüîß Verifica:');
        console.log('   1. MySQL est√° corriendo');
        console.log('   2. Las credenciales en .env son correctas');
        console.log('   3. El usuario tiene permisos para crear bases de datos');
        console.log('\nüí° Intenta ejecutar manualmente:');
        console.log(`   mysql -u ${process.env.DB_USER || 'root'} -p < database/schema.sql`);
    } finally {
        if (connection) {
            await connection.end();
        }
    }
}

// Ejecutar setup
setupDatabase();
